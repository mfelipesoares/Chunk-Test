name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Build project
      run: |
        # Cria o diretório de build
        mkdir -p dist
        
        # Copia arquivos estáticos
        cp index.html dist/
        cp index.js dist/
        
        # Copia a pasta chunks se existir
        if [ -d "chunks" ]; then
          cp -r chunks dist/
        fi
        
        # Cria um package.json básico se não existir
        if [ ! -f "package.json" ]; then
          echo '{
            "name": "chunk-streaming",
            "version": "1.0.0",
            "type": "module",
            "dependencies": {
              "express": "^4.18.2"
            }
          }' > dist/package.json
        else
          cp package.json dist/
        fi
        
        # Cria server.js otimizado para produção
        cat > dist/server.js << 'EOF'
        import express from 'express';
        import path from 'path';

        const currentDir = process.cwd();
        const app = express();
        const PORT = process.env.PORT || 3000;

        // Serve arquivos estáticos
        app.use(express.static(currentDir));
        app.use('/chunks', express.static(path.join(currentDir, 'chunks')));

        // Rota principal
        app.get('/', (req, res) => {
          res.sendFile(path.join(currentDir, 'index.html'));
        });

        // CORS headers
        app.use((req, res, next) => {
          res.header('Access-Control-Allow-Origin', '*');
          res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
          res.header('Access-Control-Allow-Headers', 'Content-Type');
          next();
        });

        app.listen(PORT, () => {
          console.log(`Servidor rodando em http://localhost:${PORT}`);
        });
        EOF
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4